Ext.data.JsonP.Ramen_app_Application({"tagname":"class","name":"Ramen.app.Application","autodetected":{},"files":[{"filename":"Application.js","href":"Application.html#Ramen-app-Application"}],"mixins":["JSoop.mixins.Configurable"],"members":[{"name":"collections","tagname":"cfg","owner":"Ramen.app.Application","id":"cfg-collections","meta":{}},{"name":"controllers","tagname":"cfg","owner":"Ramen.app.Application","id":"cfg-controllers","meta":{}},{"name":"constructor","tagname":"method","owner":"Ramen.app.Application","id":"method-constructor","meta":{}},{"name":"run","tagname":"method","owner":"Ramen.app.Application","id":"method-run","meta":{"template":true}}],"alternateClassNames":[],"aliases":{},"id":"class-Ramen.app.Application","short_doc":"Represents a Ramen application. ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Mixins</h4><div class='dependency'>JSoop.mixins.Configurable</div><h4>Files</h4><div class='dependency'><a href='source/Application.html#Ramen-app-Application' target='_blank'>Application.js</a></div></pre><div class='doc-contents'><p>Represents a Ramen application. In most cases, this is a single page application that contains one or more\n<a href=\"#!/api/Ramen.view.View\" rel=\"Ramen.view.View\" class=\"docClass\">views</a>. The behavior of views is controlled by <a href=\"#!/api/Ramen.app.Controller\" rel=\"Ramen.app.Controller\" class=\"docClass\">controllers</a> and\napplication data is managed through <a href=\"#!/api/Ramen.data.Model\" rel=\"Ramen.data.Model\" class=\"docClass\">models</a> and <a href=\"#!/api/Ramen.data.Collection\" rel=\"Ramen.data.Collection\" class=\"docClass\">collections</a>.</p>\n\n<p>Controllers and collections are instantiated through this class:</p>\n\n<pre><code> <a href=\"#!/api/Ramen-method-application\" rel=\"Ramen-method-application\" class=\"docClass\">Ramen.application</a>({\n     collections: {\n         Users: 'Demo.collection.Users'\n     },\n\n     controllers: {\n         user: 'Demo.collection.User'\n     },\n\n     run: function () {\n         //application execution\n     }\n });\n</code></pre>\n\n<p>This will setup the desired collection and controller, and will call the <code>run</code> function when everything is ready. It\nshould rarely be required to extend this class. Instead, use <a href=\"#!/api/Ramen-method-application\" rel=\"Ramen-method-application\" class=\"docClass\">Ramen.application</a> to create a new application.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-collections' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ramen.app.Application'>Ramen.app.Application</span><br/><a href='source/Application.html#Ramen-app-Application-cfg-collections' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ramen.app.Application-cfg-collections' class='name expandable'>collections</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates collections with the given names and types. ...</div><div class='long'><p>Creates collections with the given names and types. These collections will then be accessible via\n<a href=\"#!/api/Ramen-method-getCollection\" rel=\"Ramen-method-getCollection\" class=\"docClass\">Ramen.getCollection</a>. For example, the following creates a collection of type <code>Demo.collection.Users</code> and\nmakes it available under the name <code>Users</code>.</p>\n\n<pre><code> ...\n collections: {\n     Users: 'Demo.collection.Users'\n },\n ...\n</code></pre>\n</div></div></div><div id='cfg-controllers' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ramen.app.Application'>Ramen.app.Application</span><br/><a href='source/Application.html#Ramen-app-Application-cfg-controllers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ramen.app.Application-cfg-controllers' class='name expandable'>controllers</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates controllers with the given names and types. ...</div><div class='long'><p>Creates controllers with the given names and types. In the following example, the controller <code>user</code> will be\ncreated with the type <code>Demo.controller.User</code>:</p>\n\n<pre><code> ...\n controllers: {\n     user: 'Demo.controller.User'\n },\n ...\n</code></pre>\n\n<p>The value of each key-value pair can either be a <code>string</code> defining the type that should be created, or a config\nobject that can be used to create a controller. If a config object is used, the <code>type</code> key must be populated\nwith the desired controller type to be created. Each controller receives an <code>app</code> property that references the\napplication that created it.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ramen.app.Application'>Ramen.app.Application</span><br/><a href='source/Application.html#Ramen-app-Application-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Ramen.app.Application-method-constructor' class='name expandable'>Ramen.app.Application</a>( <span class='pre'>config</span> ) : <a href=\"#!/api/Ramen.app.Application\" rel=\"Ramen.app.Application\" class=\"docClass\">Ramen.app.Application</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a new Application ...</div><div class='long'><p>Creates a new Application</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'><p>The config object</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ramen.app.Application\" rel=\"Ramen.app.Application\" class=\"docClass\">Ramen.app.Application</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-run' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ramen.app.Application'>Ramen.app.Application</span><br/><a href='source/Application.html#Ramen-app-Application-method-run' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ramen.app.Application-method-run' class='name expandable'>run</a>( <span class='pre'></span> )<span class=\"signature\"><span class='template' >template</span></span></div><div class='description'><div class='short'>Called after all controllers and collections have been created. ...</div><div class='long'><p>Called after all <a href=\"#!/api/Ramen.app.Application-cfg-controllers\" rel=\"Ramen.app.Application-cfg-controllers\" class=\"docClass\">controllers</a> and <a href=\"#!/api/Ramen.app.Application-cfg-collections\" rel=\"Ramen.app.Application-cfg-collections\" class=\"docClass\">collections</a> have been created.</p>\n      <div class='rounded-box template-box'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n</div></div></div></div></div></div></div>","meta":{}});